{"version":3,"sources":["components/Footer.js","components/Hero.js","components/Homepage.js","components/About.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","d-flex","justify-content-end","Hero","props","Jumbotron","title","subTitle","text","Homepage","About","Contact","App","state","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","to","exact","render","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.425093bf.chunk.js","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\n\nfunction Footer() {\n    return (\n        <footer className='mt-5'>\n            <Container fluid={true}>\n                <Row className='border-top justify-content-between p-3'>\n                    <Col className='p-0' md={3} sm={12}>\n                        Tebogo Gift\n                    </Col>\n                    <Col className='p-0' d-flex justify-content-end md={2}>\n                        This site was made by Tebogo Gift\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Hero(props) {\n  return (\n    <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\n      <Container fluid={true}>\n        <Row className=\"justify-content-center py-5\">\n          <Col md={8} sm={12}>\n            {props.title && (\n              <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1>\n            )}\n            {props.subTitle && (\n              <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3>\n            )}\n            {props.text && (\n              <h3 className=\"lead font-weight-light\">{props.text}</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\nimport Hero from \"./Hero\";\n\nfunction Homepage(props) {\n  return (\n    <div>\n      <Hero title={props.title}  subTitle={props.subTitle} text={props.text}/>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            About Page!!\n        </div>\n    )\n}\n\nexport default About\n","import React from \"react\";\n\nfunction Contact() {\n  return <div>Contact page!</div>;\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./components/Homepage\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Tebogo Gift\",\n      headerLinks: [\n        { title: \"Home\", path: \"/\" },\n        { title: \"About\", path: \"/about\" },\n        { title: \"Contact\", path: \"/contact\" },\n      ],\n      home: {\n        title: \"Be Relentless\",\n        subTitle: \"Projects that make a difference\",\n        text: \"Checkout my projects\",\n      },\n      about: {\n        title: \"About Me\",\n      },\n      contact: {\n        title: \"Let's talk\",\n      },\n    };\n  }\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand>Tebogo Gift</Navbar.Brand>\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home\n                </Link>\n                <Link className=\"nav-link\" to=\"/about\">\n                  About\n                </Link>\n                <Link className=\"nav-link\" to=\"/contact\">\n                  Contact\n                </Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Homepage\n                title={this.state.home.title}\n                subTitle={this.state.home.subTitle}\n                text={this.state.home.text}\n              />\n            )}\n          />\n          <Route\n            path=\"/about\"\n            render={() => <About title={this.state.about.title} />}\n          />\n          <Route\n            path=\"/contact\"\n            render={() => <Contact title={this.state.contact.title} />}\n          />\n          <Footer />\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}